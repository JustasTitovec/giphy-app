{"version":3,"sources":["components/GiftList/GifsList.js","components/SearchBar/SearchBar.js","apis/giphy.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","color","border","boxShadow","shadows","padding","outline","GifsList","images","isLoading","classes","useState","open","setOpen","selected","setSelected","className","style","src","alt","map","image","downsized_medium","url","title","onClick","gif","id","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","import_datetime","SearchBar","onFormSubmit","term","setTerm","onSubmit","e","preventDefault","onChange","event","target","value","type","placeholder","pattern","required","axios","create","baseURL","App","setImages","setLoading","onTermSubmit","a","giphy","get","params","api_key","limit","q","response","console","log","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0aee496.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './GifsList.scss';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: 'rgb(18, 18, 18)',\n    color: 'white',\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: '20px',\n    outline: 'none',\n  },\n}));\n\nconst GifsList = ({ images, isLoading }) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [selected, setSelected] = useState({});\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const selectGif = (gif) => {\n    setOpen(true);\n    setSelected(gif);\n  };\n\n  return (\n    <div className=\"container\">\n      {isLoading ? (\n        <div className=\"images-container__welcome\">\n          <div style={{ color: 'white', padding: '20px' }}>\n            Welcome to Giphy finder page\n          </div>\n          <img\n            src=\"https://media.giphy.com/media/2sgDam8j8wQaMRzmIk/giphy.gif\"\n            alt=\"Doggy\"\n          />\n        </div>\n      ) : (\n        <div className=\"images-container\">\n          {images.map((image) => {\n            return (\n              <div className=\"images-container__image\" key={image?.id}>\n                <img\n                  className=\"img\"\n                  src={image.images.downsized_medium.url}\n                  alt={image.title}\n                  onClick={() => selectGif(image)}\n                />\n              </div>\n            );\n          })}\n        </div>\n      )}\n\n      {!open ? (\n        <div></div>\n      ) : (\n        <Modal\n          aria-labelledby=\"transition-modal-title\"\n          aria-describedby=\"transition-modal-description\"\n          className={classes.modal}\n          open={open}\n          closeAfterTransition\n          BackdropComponent={Backdrop}\n          BackdropProps={{\n            timeout: 500,\n          }}\n        >\n          <Fade in={open}>\n            <div className={classes.paper}>\n              <div onClick={handleClose} className=\"transition-modal-closeBtn\">\n                Close\n              </div>\n              <img\n                src={selected.images.downsized_medium.url}\n                alt={selected.title}\n                className=\"transition-modal-image\"\n              />\n              <p id=\"transition-modal-description\">{selected.title}</p>\n              <p id=\"transition-modal-description\">\n                Date created: {selected.import_datetime}\n              </p>\n            </div>\n          </Fade>\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default GifsList;\n","import React, { useState } from 'react';\nimport './SearchBar.scss';\n\nconst SearchBar = ({ onFormSubmit }) => {\n  const [term, setTerm] = useState('');\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    onFormSubmit(term);\n    setTerm('');\n  };\n\n  return (\n    <div className=\"search-bar\">\n      <form onSubmit={onSubmit} className=\"form\">\n        <div className=\"field\">\n          <input\n            className=\"input\"\n            onChange={(event) => setTerm(event.target.value)}\n            value={term}\n            type=\"text\"\n            placeholder=\"pages\"\n            pattern=\"[a-zA-Z0-9 ]+\"\n            required\n          />\n          <div onClick={onSubmit} className=\"icon\">\n            <i className=\"fas fa-search\"></i>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'http://api.giphy.com/v1',\n});\n","import React, { useState } from 'react';\nimport GifsList from './components/GiftList/GifsList';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport './App.scss';\nimport giphy from './apis/giphy';\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n\n  const onTermSubmit = async (term) => {\n    const response = await giphy.get('/gifs/search', {\n      params: {\n        api_key: 'og6TjIlZV6HMhIFiXNXHFxJySKhD0aeu',\n        limit: 24,\n        q: term,\n      },\n    });\n    console.log(response.data.data);\n    setImages(response.data.data);\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"app\">\n      <SearchBar onFormSubmit={onTermSubmit} />\n      <GifsList isLoading={isLoading} images={images} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}